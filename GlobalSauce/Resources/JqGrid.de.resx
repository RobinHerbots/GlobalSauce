<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="edit_addCaption" xml:space="preserve">
    <value>Eintrag hinzufügen</value>
  </data>
	<data name="edit_bCancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
	<data name="edit_bClose" xml:space="preserve">
    <value>Schließen</value>
  </data>
	<data name="edit_bExit" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
	<data name="edit_bNo" xml:space="preserve">
    <value>Nein</value>
  </data>
	<data name="edit_bSubmit" xml:space="preserve">
    <value>Senden</value>
  </data>
	<data name="edit_bYes" xml:space="preserve">
    <value>Ja</value>
  </data>
	<data name="edit_editCaption" xml:space="preserve">
    <value>Datensatz bearbeiten</value>
  </data>
	<data name="edit_saveData" xml:space="preserve">
    <value>Daten wurde geändert! Speichern Änderungen?</value>
  </data>
	<data name="emptyrecords" xml:space="preserve">
    <value>Keine Datensätze anzeigen</value>
  </data>
	<data name="groupOps_op_and" xml:space="preserve">
    <value>UND</value>
  </data>
	<data name="groupOps_op_or" xml:space="preserve">
    <value>OR</value>
  </data>
	<data name="groupOps_text_and" xml:space="preserve">
    <value>Alle</value>
  </data>
	<data name="groupOps_text_or" xml:space="preserve">
    <value>Alle</value>
  </data>
	<data name="loadtext" xml:space="preserve">
    <value>Wird geladen...</value>
  </data>
	<data name="odata_bn" xml:space="preserve">
    <value>beginnt nicht mit</value>
  </data>
	<data name="odata_bw" xml:space="preserve">
    <value>beginnt mit</value>
  </data>
	<data name="odata_cn" xml:space="preserve">
    <value>enthält</value>
  </data>
	<data name="odata_en" xml:space="preserve">
    <value>endet nicht mit</value>
  </data>
	<data name="odata_eq" xml:space="preserve">
    <value>gleich</value>
  </data>
	<data name="odata_ew" xml:space="preserve">
    <value>endet mit</value>
  </data>
	<data name="odata_ge" xml:space="preserve">
    <value>größer oder gleich</value>
  </data>
	<data name="odata_gt" xml:space="preserve">
    <value>größere</value>
  </data>
	<data name="odata_in" xml:space="preserve">
    <value>ist in</value>
  </data>
	<data name="odata_le" xml:space="preserve">
    <value>kleiner oder gleich</value>
  </data>
	<data name="odata_lt" xml:space="preserve">
    <value>weniger</value>
  </data>
	<data name="odata_nc" xml:space="preserve">
    <value>enthält keine</value>
  </data>
	<data name="odata_ne" xml:space="preserve">
    <value>nicht gleich</value>
  </data>
	<data name="odata_ni" xml:space="preserve">
    <value>ist nicht da</value>
  </data>
	<data name="pgtext" xml:space="preserve">
    <value>Seite {0} von {1}</value>
  </data>
	<data name="recordtext" xml:space="preserve">
    <value>{0}-{1} von {2} anzeigen</value>
  </data>
	<data name="search_caption" xml:space="preserve">
    <value>Suche...</value>
  </data>
	<data name="search_Find" xml:space="preserve">
    <value>Finden</value>
  </data>
	<data name="search_Reset" xml:space="preserve">
    <value>Zurücksetzen</value>
  </data>
	<data name="col_bCancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
	<data name="col_bSubmit" xml:space="preserve">
    <value>Okay</value>
  </data>
	<data name="col_caption" xml:space="preserve">
    <value>Wählen Sie die Spalten</value>
  </data>
	<data name="del_bCancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
	<data name="del_bSubmit" xml:space="preserve">
    <value>Löschen</value>
  </data>
	<data name="del_caption" xml:space="preserve">
    <value>Löschen</value>
  </data>
	<data name="del_msg" xml:space="preserve">
    <value>Löschen Sie die ausgewählte Eintragung(en)?</value>
  </data>
	<data name="errors_errcap" xml:space="preserve">
    <value>Fehler</value>
  </data>
	<data name="errors_model" xml:space="preserve">
    <value>Länge des ColNames &lt;&gt;ColModel!</value>
  </data>
	<data name="errors_norecords" xml:space="preserve">
    <value>Keine Daten zum Verarbeiten</value>
  </data>
	<data name="errors_nourl" xml:space="preserve">
    <value>NoUrl wird festgelegt.</value>
  </data>
	<data name="msg_customarray" xml:space="preserve">
    <value>Benutzerdefinierte Funktion sollte Array zurückgeben!</value>
  </data>
	<data name="msg_customfcheck" xml:space="preserve">
    <value>Benutzerdefinierte Funktion sollte bei benutzerdefinierte Überprüfung vorhanden sein!</value>
  </data>
	<data name="msg_date" xml:space="preserve">
    <value>Bitte geben Sie gültigen Datumswert</value>
  </data>
	<data name="msg_email" xml:space="preserve">
    <value>ist keine gültige e-mail</value>
  </data>
	<data name="msg_integer" xml:space="preserve">
    <value>Bitte geben Sie gültige Integer-Wert</value>
  </data>
	<data name="msg_maxValue" xml:space="preserve">
    <value>Wert muss kleiner als oder gleich</value>
  </data>
	<data name="msg_minValue" xml:space="preserve">
    <value>Wert muss größer als oder gleich sein.</value>
  </data>
	<data name="msg_nodefined" xml:space="preserve">
    <value>ist nicht definiert!</value>
  </data>
	<data name="msg_novalue" xml:space="preserve">
    <value>Rückgabewert ist erforderlich!</value>
  </data>
	<data name="msg_number" xml:space="preserve">
    <value>Bitte geben Sie gültige Zahl</value>
  </data>
	<data name="msg_required" xml:space="preserve">
    <value>Feld muss ausgefüllt werden</value>
  </data>
	<data name="msg_url" xml:space="preserve">
    <value>ist keine gültige URL. Präfix erforderlich ('http://' oder 'https://')</value>
  </data>
	<data name="nav_addtitle" xml:space="preserve">
    <value>Neue Zeile einfügen</value>
  </data>
	<data name="nav_alertcap" xml:space="preserve">
    <value>Warnung</value>
  </data>
	<data name="nav_alerttext" xml:space="preserve">
    <value>Bitte wählen Sie die Zeile</value>
  </data>
	<data name="nav_deltitle" xml:space="preserve">
    <value>Ausgewählte Zeile löschen</value>
  </data>
	<data name="nav_edittitle" xml:space="preserve">
    <value>Ausgewählte Zeile bearbeiten</value>
  </data>
	<data name="nav_refreshtitle" xml:space="preserve">
    <value>Reload-Raster</value>
  </data>
	<data name="nav_searchtitle" xml:space="preserve">
    <value>Suchen von Datensätzen</value>
  </data>
	<data name="nav_viewtitle" xml:space="preserve">
    <value>Ansicht ausgewählten Zeile</value>
  </data>
	<data name="view_bclose" xml:space="preserve">
    <value>Schließen</value>
  </data>
	<data name="view_caption" xml:space="preserve">
    <value>Ansicht-Datensatz</value>
  </data>
</root>